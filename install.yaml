# Details about the install.yaml file are at https://ddev.readthedocs.io/en/latest/users/extend/additional-services/#sections-and-features-of-ddev-get-add-on-installyaml

name: mittwald

# pre_install_actions - list of actions to run before installing the addon.
pre_install_actions:
- |
  #ddev-nodisplay
  if ( {{ contains "MITTWALD_API_TOKEN" (list .DdevGlobalConfig.web_environment | toString) }} || {{ contains "MITTWALD_API_TOKEN" (list .DdevProjectConfig.web_environment | toString) }} ); then
    echo "Using existing MITTWALD_API_TOKEN."
  else
    printf "\nPlease enter mittwald API token: "
  fi

- |
  #ddev-description:set mittwald API token
  #ddev-nodisplay
  if !( {{ contains "MITTWALD_API_TOKEN" (list .DdevGlobalConfig.web_environment | toString) }} || {{ contains "MITTWALD_API_TOKEN" (list .DdevProjectConfig.web_environment | toString) }} ); then
    token="${MITTWALD_API_TOKEN}"
    if [[ -z "${token}" && -z "${DDEV_NONINTERACTIVE}" ]] ; then
      read -s token
    fi

    if [[ -z "${token}" ]] ; then
      echo "MITTWALD_API_TOKEN not set; please provide one in the web_environment configuration" >&2
      exit 1
    fi

    ddev config global --web-environment-add MITTWALD_API_TOKEN=${token}
    echo "MITTWALD_API_TOKEN set globally"
  fi

- |
  #ddev-nodisplay
  if !( {{ contains "MITTWALD_APP_INSTALLATION_ID" (list .DdevProjectConfig.web_environment | toString) }} ); then
    printf "Please enter mittwald app installation ID (formatted a-XXXXXX): "
  fi

- |
  #ddev-description:set mittwald app installation ID
  #ddev-nodisplay
  if !( {{ contains "MITTWALD_APP_INSTALLATION_ID" (list .DdevProjectConfig.web_environment | toString) }} ); then
    app_id="${MITTWALD_APP_INSTALLATION_ID}"
    if [[ -z "${app_id}" && -e "${DDEV_NONINTERACTIVE}" ]] ; then
      read app_id
    fi

    if [[ -z "${app_id}" ]] ; then
      echo "MITTWALD_APP_INSTALLATION_ID not set; please provide one in the web_environment configuration" >&2
      exit 1
    fi

    ddev config --web-environment-add MITTWALD_APP_INSTALLATION_ID=${app_id}
  fi


# list of files and directories listed that are copied into project .ddev directory
# Each file should contain #ddev-generated so it can be replaced by a later `ddev get`
# if it hasn't been modified by the user.
# DDEV environment variables can be interpolated into these filenames
project_files:
- web-build/Dockerfile.mittwald
- providers/mittwald.yaml

# List of files and directories that are copied into the global .ddev directory
# DDEV environment variables can be interpolated into these filenames
global_files:
- commands

# List of add-on names that this add-on depends on
dependencies:
# - redis

# DDEV environment variables can be interpolated into these actions
post_install_actions:

- |
  #ddev-description:write mittwald specific configuration file

  # Load all configured MITTWALD_ environment variables into the current shell;
  # we'll need them for the mittwald/cli calls.
  {{ range $var := .DdevGlobalConfig.web_environment }}
  {{ if hasPrefix "MITTWALD_" $var }}
  export {{ $var }}
  {{ end }}
  {{ end }}
  
  if [ -e config.mittwald.yaml ] ; then
    echo "mittwald specific config file already exists"
  else
    docker run --rm -e MITTWALD_API_TOKEN mittwald/cli mw ddev render-config "${MITTWALD_APP_INSTALLATION_ID}" > config.mittwald.yaml
    echo "mittwald specific config file written to config.mittwald.yaml"
  fi

- |
  echo -e "\nðŸš€ All done! You can now do the following:\n"
  echo "  - Use 'ddev mw ...' to run the mittwald CLI from within the web container"
  echo "  - Use 'ddev pull mittwald' to download the configured app"
  echo "  - Use 'ddev push mittwald' to upload the app to the mittwald platform (DANGEROUS)"

# Shell actions that can be done during removal of the add-on
removal_actions:
# - rm ~/.ddev/commands/web/somecommand

# Advanced usage - yaml files can be read in and then used as go template actions
# in pre_install_actions and post_install_actions
# See example in
# https://github.com/rfay/ddev/blob/20220606_yaml_read_experiment/cmd/ddev/cmd/testdata/TestCmdGetComplex/recipe/install.yaml
yaml_read_files:
# someyaml: someyaml.yaml
# otheryaml: someotheryaml.yaml
